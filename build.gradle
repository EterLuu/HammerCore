plugins {
    id 'java'
    id("io.github.goooler.shadow") version "8.1.8"
}

group = 'ink.ziip.hammer'
version = '1.3-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "dmulloy2"
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "opencollabRepositoryMavenSnapshots"
        url = "https://repo.opencollab.dev/maven-snapshots"
    }
    maven {
        url = uri("https://repo.opencollab.dev/maven-releases")
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        name = "extendedclip placeholderapi"
        url = 'https://repo.extendedclip.com/releases/'
    }
    maven {
        name = "playpro"
        url = 'https://maven.playpro.com/'
    }
}

dependencies {
    
    compileOnly(fileTree("libs"))

    // ProjectKorra
    implementation 'com.github.ProjectKorra:ProjectKorra:v1.11.2'

    // floodgate api
    implementation("org.geysermc.floodgate:api:2.2.2-SNAPSHOT")

    // Brewery
    implementation 'com.github.DieReicheErethons:Brewery:v3.1.1'

    // NBT API
    implementation("de.tr7zw:item-nbt-api:2.14.1")

    // CoreProtect
    implementation("net.coreprotect:coreprotect:22.0")

    // spigot-api
    compileOnly "org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT"

    // PlaceholderAPI
    compileOnly 'me.clip:placeholderapi:2.11.6'

    // ProtocolLib
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate("de.tr7zw.changeme.nbtapi", "ink.ziip.hammer.nbtapi")
}

build {
    dependsOn(shadowJar)
}
